library ieee;
use ieee.std_logic_1164.all;

entity state_machine_task2 is
	port (
		resetb, xdone, ydone : in std_logic;
		initx, inity, loady, loadx, plot : out std_logic;
	);
end state_machine_task2;

architecture behaviour of state_machine_task2 is
	type state_type is (idle, run_x_line, increment_y, done);
	signal state : state_type;
begin
	process(xdone,ydone,resetb)
		if resetb = '1' then
			state <= idle;
		else
			case state is
			when idle =>
				initx <= '1';
				inity <= '1';
				loady <= '1';
				loadx <= '1';
				plot  <= '0';
				state <= run_x_line;
			when run_x_line =>
				initx <= '0';
				inity <= '0';
				loady <= '0';
				loadx <= '1';
				plot  <= '1';
				state <= run_x_line;
				if ydone = '1' then
					state <= done;
				if ydone = '0' AND xdone = '1' then
					state <= increment_y;
			when increment_y =>
				initx <= '1';
				inity <= '0';
				loady <= '1';
				loadx <= '1';
				plot  <= '0';
				state <= run_x_line;
			when done =>
				initx <= 1;
				inity <= 1;
				loady <= 1;
				loadx <= 1;
				plot  <= 0;
				state <= done;
		end if;
	end process;
end behaviour;